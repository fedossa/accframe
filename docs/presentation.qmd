---
title: "botex: Using LLMs as Experimental Participants in oTree"
subtitle: "" # we use this for the venue
author: Joachim Gassen and Victor Maas
institute: Humboldt-Universit√§t zu Berlin and University of Amsterdam
date: today
date-format: "MMMM D, YYYY"
format: 
  beamer: 
    latex_engine: xelatex # pdflatex creates rastered fonts
    slide_level: 3
    
classoption: "aspectratio=169"

header-includes:
- \usepackage{booktabs} 
- \usepackage{tabularx}
- \usepackage{multirow,makecell}
- \usepackage{array}
- \renewcommand\tabularxcolumn[1]{m{#1}}
- \usepackage{makecell}
- \usepackage{colortbl}
- \usepackage{adjustbox}
- \usepackage{tikz}
- \usepackage{siunitx}
- \usepackage{tabu}
- \usetikzlibrary{arrows,arrows.meta,calc,positioning,matrix}
- \input{materials/beamer_theme_trr266_16x9.sty}
- \usepackage{tikz}
- \usepackage{tikzsymbols}
- \usetikzlibrary{calc, shapes, arrows.meta, positioning}
---

```{r setup, include=FALSE, cache=F, message=F, warning=F, results="hide"}
knitr::opts_chunk$set(
  cache = FALSE, echo = FALSE, message = FALSE, warning = FALSE
)

suppressMessages({
  library(tidyverse)
  library(ggbeeswarm)
  library(kableExtra)
  library(modelsummary)
  library(showtext)
	library(ggwordcloud)
	library(tidytext)
	library(gt)
  
  devtools::source_url(
    "https://raw.githubusercontent.com/trr266/treat/main/code/R/theme_trr.R"
  )
})

options(modelsummary_format_numeric_latex = "plain")

#DVERSION_HONESTY <- "2024-05-24"
DVERSION_HONESTY <- "2024-06-17"
#DVERSION_HONESTY <- "2024-07-02"
#DVERSION_HONESTY <- "merged"

#DVERSION_TRUST <- "2024-05-25"
DVERSION_TRUST <- "2024-06-18"
#DVERSION_TRUST <- "2024-07-03"
#DVERSION_TRUST <- "merged"

#DVERSION_GIFTEX <- "2024-05-25"
DVERSION_GIFTEX <- "2024-06-18"
#DVERSION_GIFTEX <- "2024-07-02"
#DVERSION_GIFTEX <- "merged"


trounds <- read_csv(
  sprintf("../data/generated/trust_%s_rounds.csv", DVERSION_TRUST), 
  show_col_types = FALSE
) %>%
	mutate(
		experiment = factor(ifelse(
			experiment == "ftrust",
			"Investor/Management Framing", "Neutral Framing"
		), c("Neutral Framing", "Investor/Management Framing")),
		pct_returned = sent_back_amount/(3*sent_amount)
	)
tparticipants <- read_csv(
  sprintf("../data/generated/trust_%s_participants.csv", DVERSION_TRUST), 
  show_col_types = FALSE
)  %>%
	mutate(
		experiment = factor(ifelse(
			experiment == "ftrust",
			"Inv/Manag", "Neutral"
		), c("Neutral", "Inv/Manag"))
	)

drounds <- read_csv("../data/generated/deception_rounds.csv", show_col_types = FALSE) %>%
	mutate(
		experiment = factor(ifelse(
			experiment == "fdeception",
			"Accountant/HQ Framing", "Neutral Framing"
		), c("Neutral Framing", "Accountant/HQ Framing")),
		lied = as.integer(message == 2),
		followed = as.integer(choice == message)
	)
dparticipants <- read_csv("../data/generated/deception_participants.csv", show_col_types = FALSE) %>%
	mutate(
		experiment = factor(ifelse(
			experiment == "fdeception",
			"Accountant/HQ Framing", "Neutral Framing"
		), c("Neutral Framing", "Accountant/HQ Framing")),
	)

hrounds <- read_csv(
  sprintf("../data/generated/honesty_%s_rounds.csv", DVERSION_HONESTY), 
  show_col_types = FALSE
)  %>%
	mutate(
		experiment = factor(ifelse(
			experiment == "fhonesty",
			"Business Framing", "Neutral Framing"
		), c("Neutral Framing", "Business Framing")),
		slack = reported_amount - true_amount,
		pct_slack_claimed = (reported_amount - true_amount)/(6000 - true_amount)
	)
hparticipants <- read_csv(
  sprintf("../data/generated/honesty_%s_participants.csv", DVERSION_HONESTY), 
  show_col_types = FALSE
)  %>%
	mutate(
		experiment = factor(ifelse(
			experiment == "fhonesty",
			"Business Framing", "Neutral Framing"
		), c("Neutral Framing", "Business Framing")),
	)

grounds <- read_csv(
  sprintf("../data/generated/giftex_%s_rounds.csv", DVERSION_GIFTEX), 
  show_col_types = FALSE
) %>%
	mutate(
		experiment = factor(ifelse(
			experiment == "fgiftex",
			"Business Framing", "Neutral Framing"
		), c("Neutral Framing", "Business Framing")),
	)
gparticipants <- read_csv(
  sprintf("../data/generated/giftex_%s_participants.csv", DVERSION_GIFTEX), 
  show_col_types = FALSE
) %>%
	mutate(
		experiment = factor(ifelse(
			experiment == "fgiftex",
			"Business Framing", "Neutral Framing"
		), c("Neutral Framing", "Business Framing")),
	)


# Needs \usepackage{adjustbox} in preamble
fit_gt_table_to_slide <- function(x, scale = 1) {
	if (scale == 1) repstr <- "\\\\resizebox{\\\\columnwidth}{!}{\\\\begin{tabular}"
	else repstr <- paste0("\\\\resizebox{", scale, "\\\\columnwidth}{!}{\\\\begin{tabular}")
  x <- sub("\\\\begin\\{longtable\\}", repstr, x)
  x <- sub("\\\\end\\{longtable\\}", "\\\\end{tabular}}", x)
  x
}

fit_gt_table_to_slide_long <- function(x, scale = 1) {
	if (scale == 1) repstr <- "\\\\resizebox*{!}{\\\\textheight}{\\\\begin{tabular}"
	else repstr <- paste0("\\\\resizebox*{!}{", scale, "\\\\textheight}{\\\\begin{tabular}")
  x <- sub("\\\\begin\\{longtable\\}", repstr, x)
  x <- sub("\\\\end\\{longtable\\}", "\\\\end{tabular}}", x)
  x
}

center_table <- function(x) {
	x[1] <- paste0("\\begin{center}", x[1], "\\end{center}")
	x
}

star_stat <- function(x, neg = FALSE) {
  if (neg) x$statistic <- -x$statistic 
  paste0(
    format(round(x$statistic, 2), nsmall = 2),
    ifelse(x$p.value < 0.01, "***", ifelse(x$p.value < 0.05, "**", ifelse(x$p.value < 0.1, "*", "")))
  )
}
```

```{r InstallTRRFonts}
trr266_fonts_available <- all(c("Cambria", "Calibri Light") %in% font_families())

if (!trr266_fonts_available) {
  # On Mac with MS Office installation you need to add the Office
  # Fonts to the font path. The following depends on your 
  # installation but _should_ work in most cases
  
  office_font_path <- "/Applications/Microsoft Word.app/Contents/Resources/DFonts"
  if (Sys.info()["sysname"] == "Darwin") {
    if (dir.exists(office_font_path)) font_paths(office_font_path)
    else stop("MS Office font path not found")
  }
  
  rv <- tryCatch({
    font_add(family = "Cambria", regular = "Cambria.ttc")
    font_add(family = "Calibri Light", regular = "calibril.ttf")
  }, error = function(e) {
    message(sprintf("Failed to install TRR 266 fonts: %s", e))
    invisible(font_families())        
  })
  
  trr266_fonts_available <- all(c("Cambria", "Calibri Light") %in% rv)
  if (trr266_fonts_available) message("Successfully installed TRR 266 fonts") 
}
```

## Motivation

1. Designing experiments is hard and small differences in experimental materials can have significant impact on experimental findings. Wouldn't it be great to have a "cheap" way to pretest experimental designs without bothering humans?

2. Understanding how LLMs act in behavioral experiments - on their own and interacting with humans - is an emergent and rapidly evolving research field. Providing an infrastructure to run such experiments should be beneficial for the profession.

3. Applied experimental work often uses context framing in their experimental designs without explicitly hypothesizing and assessing its effect on findings. LLM based experiments might inform priors in that regard.


## Traditional oTree Setup

\begin{center}
\begin{tikzpicture}[
    block/.style={rectangle, draw, text width=5em, text centered, minimum height=4em},
    line/.style={draw, -Latex},
    every node/.append style={
        execute at end node={\strut},
    }
]

% Blocks
\node[block] (otree) {oTree};
\node[block, right=2cm of otree] (webpages) {Webpages};
\node[right=2cm of webpages] (participants) {\Strichmaxerl[4]}  {};
\node[left=2cm of otree] (researcher){\Strichmaxerl[4]} {};

% Lines
\draw[line] ($(researcher.east)!0.5!(researcher.north east)$) -- node[above] {Design} ($(otree.west)!0.5!(otree.north west)$);
\draw[line] ($(otree.west)!0.5!(otree.south west)$) -- node[below] {Data} ($(researcher.east)!0.5!(researcher.south east)$);
\draw[line] ($(otree.east)!0.5!(otree.north east)$) -- node[above] {HTTP} ($(webpages.west)!0.5!(webpages.north west)$);
\draw[line] ($(webpages.west)!0.5!(webpages.south west)$) -- node[below] {Response} ($(otree.east)!0.5!(otree.south east)$);
\draw[line, Latex-Latex] (participants) -- (webpages);

% Labels
\node[below=0.1cm of participants] {Human Participants};
\node[below=0.1cm of researcher] {Researcher};

\end{tikzpicture}
\end{center}


## oTree + Alter Ego

\begin{center}
\begin{tikzpicture}[
    block/.style={rectangle, draw, text width=5em, text centered, minimum height=4em},
    line/.style={draw, -Latex},
    every node/.append style={
        execute at end node={\strut},
    }
]

% Blocks
\node[block] (otree) {oTree};
\node[block, above=	1cm of otree] (llm) {LLM};
\node[block, right=2cm of otree] (webpages) {Webpages};
\node[right=2cm of webpages] (participants) {\Strichmaxerl[4]}  {};
\node[left=2cm of otree] (researcher){\Strichmaxerl[4]} {};

% Lines
\draw[line] ($(researcher.east)!0.5!(researcher.north east)$) -- node[above] {Design} ($(otree.west)!0.5!(otree.north west)$);
\draw[line] ($(otree.west)!0.5!(otree.south west)$) -- node[below] {Data} ($(researcher.east)!0.5!(researcher.south east)$);
\draw[line] ($(otree.east)!0.5!(otree.north east)$) -- node[above] {HTTP} ($(webpages.west)!0.5!(webpages.north west)$);
\draw[line] ($(webpages.west)!0.5!(webpages.south west)$) -- node[below] {Response} ($(otree.east)!0.5!(otree.south east)$);
\draw[line, Latex-Latex] (participants) -- (webpages);
\draw[line] ($(llm.west)!0.35!(llm.north west)$) -| node[pos=0.25,above] {Data} ($(researcher.north)!0.75!(researcher.north west)$);
\draw[line] ($(researcher.north)!0.75!(researcher.north east)$) |- node[pos=0.75,below] {Design} ($(llm.west)!0.35!(llm.south west)$);

% Labels
\node[below=0.1cm of participants] {Human Participants};
\node[below=0.1cm of researcher] {Researcher};

\end{tikzpicture}
Engel, Grossmann and Ockenfels (2024, SSRN)
\end{center}


## oTree + botex

\begin{center}
\begin{tikzpicture}[
    block/.style={rectangle, draw, text width=5em, text centered, minimum height=4em},
    line/.style={draw, -Latex},
    every node/.append style={
        execute at end node={\strut},
    }
]

% Blocks
\node[block] (otree) {oTree};
\node[block, right=2cm of otree] (webpages) {Webpages};
\node[block, above=1cm of webpages] (botex) {botex};
\node[right=2cm of webpages] (participants) {\Strichmaxerl[4]}  {};
\node[block, right=2cm of botex] (llm) {LLM};
\node[left=2cm of otree] (researcher){\Strichmaxerl[4]} {};

% Lines
\draw[line] ($(researcher.east)!0.5!(researcher.north east)$) -- node[above] {Design} ($(otree.west)!0.5!(otree.north west)$);
\draw[line] ($(otree.west)!0.5!(otree.south west)$) -- node[below] {Data} ($(researcher.east)!0.5!(researcher.south east)$);
\draw[line] ($(otree.east)!0.5!(otree.north east)$) -- node[above] {HTTP} ($(webpages.west)!0.5!(webpages.north west)$);
\draw[line] ($(webpages.west)!0.5!(webpages.south west)$) -- node[below] {Response} ($(otree.east)!0.5!(otree.south east)$);
\draw[line, Latex-Latex] (participants) -- (webpages);
\draw[line] ($(webpages.north)!0.5!(webpages.north west)$) -- node[left] {Scrape} ($(botex.south)!0.5!(botex.south west)$);
\draw[line] ($(botex.south)!0.5!(botex.south east)$) -- node[right] {Response} ($(webpages.north)!0.5!(webpages.north east)$);
\draw[line] ($(llm.west)!0.5!(llm.north west)$) -- node[above] {Response} ($(botex.east)!0.5!(botex.north east)$);
\draw[line] ($(botex.east)!0.5!(botex.south east)$) -- node[below] {Prompt} ($(llm.west)!0.5!(llm.south west)$);

% Labels
\node[below=0.1cm of participants] {Human Participants};
\node[below=0.1cm of researcher] {Researcher};

\end{tikzpicture}

\end{center}

## Reseach Question

\begin{center}
How does business context framing affect the response behavior of LLMs?
\end{center}


## Motivation

- Context frames are common in the applied experimental literature

- Prior work has shown that their effect can be significant (e.g.,Liberman, Samuels and Ross Pers Soc Pscaol Bull 2014, and for investment trust games Al-Ubaydli, Houser, Nye, Paganelli, and Pan, PLOS One 2013; Cronk and Wasielewski, J of Evolutionary Psychology 2008)

- Then again, they are rarely hypothesized or even explored in the accounting literature

- LLMs reflect the priors of the average population in terms of, e.g., first order believes and social desirability biases. Thus, they might inform us how a general participant pool might react to contextual frames


## The Games

- Investment trust game (Berg, Dickhaut and McCabe, Games and Econ Behav 1995) 

- Deception (Gneezy, AER 200)

- Honesty in budgeting (Evans et al., TAR 2001)

- Gift exchange (Fehr, Kirchsteiger, and Riedl, QJE 1993)

## Trust: The Neutral Frame

\begin{center}
\includegraphics[height =0.85\textheight]{"materials/trust_otree_inst.jpeg"}
\end{center}


## Trust: The Investor/Manager Frame

\begin{center}
\includegraphics[height =0.85\textheight]{"materials/ftrust_otree_inst.jpeg"}
\end{center}


## Trust: Sample Composition

|                             |   Sender | Receiver |
|:----------------------------|---------:|---------:|
| Neutral Framing             |`r nrow(tparticipants %>% filter(experiment == "Neutral", role_in_group == 1))` |`r nrow(tparticipants %>% filter(experiment == "Neutral", role_in_group == 2))`|
| Investor/Management Framing |`r nrow(tparticipants %>% filter(experiment == "Inv/Manag", role_in_group == 1))`|`r nrow(tparticipants %>% filter(experiment == "Inv/Manag", role_in_group == 2))`|
| Total                       |`r nrow(tparticipants %>% filter(role_in_group == 1))`|`r nrow(tparticipants %>% filter(role_in_group == 2))`|


## Trust: Descriptive Statistics by Framing

```{r DescStatsTab}
datasummary((`Amount sent`=sent_amount) + (`Amount returned`=sent_back_amount) + (`% returned`=pct_returned) ~ experiment*(N + (`Mean`=mean) + (`S.D.` = sd) + (`Median`=median)), data = trounds )

```

## Trust: Sent Amount by Framing

```{r SentAmountFig, fig.width=8, fig.height=3.5, fig.align="center", fig.showtext = TRUE}
color_scale <- RColorBrewer::brewer.pal(3 ,"Set1")[c(2, 1)]
names(color_scale) <- unique(levels(trounds$experiment))
color_scale_labs <- c("Neutral", "Investor/Manager")

ggplot(trounds, aes(x = experiment, y = sent_amount, group = experiment, color = experiment)) +
  geom_boxplot() +
	geom_beeswarm(size = 0.25) +
  labs(x = "", y = "") +
	scale_x_discrete(labels = NULL, breaks = NULL) +
	scale_color_manual("", values = color_scale, labels = color_scale_labs) +
	theme_minimal() +
	theme(
		panel.grid.minor = element_blank()
	)

```

## Trust: Sent Amount by Round

```{r SentAmountRoundFig, fig.width=8, fig.height=3.5, fig.align="center", fig.showtext = TRUE}
ggplot(trounds, aes(x = as.factor(round), y = sent_amount, group = experiment, color = experiment)) +
	geom_beeswarm(size = 0.25, corral = "wrap") +
	stat_summary(
		aes(fill = experiment), color = NA, 
		geom = "ribbon", fun = "mean", alpha=0.1,
		fun.min = function(x) mean(x) - 1.96 / (length(x) - 1) * sd(x), 
		fun.max = function(x) mean(x) + 1.96 / (length(x) - 1) * sd(x),
		show.legend = FALSE
	) + 
	labs(x = "Round", y = "", color = "") +
	scale_color_manual("", values = color_scale, labels = color_scale_labs) +
	scale_fill_manual("", values = color_scale, labels = color_scale_labs) +
	theme_minimal() +
	theme(
		panel.grid.major.x  = element_blank(),
		panel.grid.minor = element_blank()
	)
```

## Trust: Regression Results

```{r RegressionTab}
modelsummary(
	lm(sent_amount ~ round*experiment, data = trounds),
	stars = c(`***` = 0.01, `**` = 0.05, `*` = 0.1),
	gof_omit = "BIC|AIC|F|RMSE|Log|^R2$",
	coef_rename = c(
		"round" = "Round",
		"experimentInvestor/Management Framing" = "Investor/Management",
		"round:experimentInvestor/Management Framing" = "Round \u00d7 Investor/Management"
	)
)
```

## Trust: Some Verbal Response

```{r ReasoningFig, fig.width=8, fig.height=3.5, fig.align="center", fig.showtext = TRUE}
vr <- trounds %>%
	mutate(full_reason = paste(sent_reason, sent_back_reason)) %>%
	unnest_tokens(word, full_reason) %>%
	anti_join(stop_words, by = "word") %>% 
	group_by(experiment, word) %>%
	filter(n() > 50) %>%
	summarise(count = n())

ggplot(vr, aes(label = word, size = count, color = experiment)) +
	geom_text_wordcloud() +
	scale_color_manual("", values = color_scale, labels = color_scale_labs) +
	facet_wrap(~experiment) +
	theme_minimal()

```



## Trust: Manipulation Checks ;-)

```{r ManCheckTab}
df <- tparticipants %>%
	mutate(
		comprehension_check = factor(ifelse(comprehension_check == 3, "Yes", "No"), c("Yes", "No")),
		manipulation_check =  factor(ifelse(manipulation_check == role_in_group, "Yes", "No"), c("Yes", "No")),
		human_check = factor(ifelse(human_check == 1, "Human", "Bot"), c("Human", "Bot"))
	)
datasummary(
	(`Answers comprehension question correctly` = comprehension_check) + 
		(`Remembers role` = manipulation_check) + 
		(`Characterizes as ...` = human_check) ~ experiment*N, 
	data = df)

```


## Deception: Descriptives by Framing

```{r DecDescStatsTab}
datasummary((`% lied`= lied) + (`% followed`=followed) ~ experiment*(N + (`Mean`=mean)), data = drounds )

ct <- chisq.test(drounds$message, drounds$experiment)
```

Chi-Square: `r star_stat(ct)`


## Honesty: Descriptives

```{r DecDescStatsHon}
datasummary((`Absolute slack` = slack) + (`% slack claimed`= pct_slack_claimed) ~ experiment*(N + (`Mean`=Mean) + (`S.D.` = SD) + (`Median`=Median)), data = hrounds )

as = t.test(hrounds$slack ~ hrounds$experiment)
rs = t.test(hrounds$pct_slack_claimed ~ hrounds$experiment)
```

Absolute Slack: `r star_stat(as, neg = T)`

Relative Slack: `r star_stat(rs, neg = T)`


## Honesty: Strategies

```{r EvansStrategies}
df <- hrounds %>%
  group_by(experiment, session_code, player_id) %>%
  summarise(
    strategy = 
      ifelse(
        all(true_amount == reported_amount), "No slack",
        ifelse(all(reported_amount == 6000), "All slack", "Some slack")
      )
  )

datasummary((`Strategy` = strategy)  ~ experiment*N, data = df)

ct <- chisq.test(df$strategy, df$experiment)
```

Chi-Square: `r star_stat(ct)`

## Honesty: Average Claimed Slack by True Cost

```{r EvansFig, fig.width=8, fig.height=3.5, fig.align="center", fig.showtext = TRUE}
names(color_scale) <- unique(levels(hrounds$experiment))
color_scale_labs <- c("Neutral", "Business Framing")
df <- hrounds %>%
  group_by(true_amount, experiment) %>%
  summarise(mn_slack = mean(slack))

ggplot(df, aes(x = true_amount, y = mn_slack, color = experiment)) +
      geom_jitter(size = 2) +
      labs(
        x = "True Cost",
        y = "",
        color = "Treatment"
      ) +
      theme_classic(base_size = 16) +
      geom_segment(x = 4000, y = 2000, xend = 6000, yend = 0, color = "#E41A1C", lty = 2) + 
      coord_cartesian(clip = 'off', xlim = c(4000, 6000), ylim = c(0, 2000)) + 
  	scale_color_manual("", values = color_scale, labels = color_scale_labs) +

      theme(plot.title.position =  "plot", legend.position = "bottom")
```

## Honesty: Absolute Regression Results

```{r RegressionTabHon, asis = TRUE}
tab_latex <- modelsummary(
	list(`Slack` = lm(slack ~true_amount*experiment + round*experiment, data = hrounds)),
	output = "gt",
	stars = c(`***` = 0.01, `**` = 0.05, `*` = 0.1),
	estimate  = "{estimate}{stars}", # Avoids note at the bottom f table
  gof_map = list(
		list(raw = "adj.r.squared", clean = "Adjusted R2", fmt = 3),
		list(
			raw = "nobs", clean = "Number of observations", 
			fmt = function(x) format(x, big.mark=",")
		)
	),
	coef_rename = c(
		"round" = "Round",
		"experimentBusiness Framing" = "Business Framing",
		"experimentBusiness Framing:round" = "Round \u00d7 Business Framing",
		"true_amount" = "True Cost",
		"true_amount:experimentBusiness Framing" = "True Cost \u00d7 Business Framing"
	)
) %>% as_latex()

# The below is needed since some tex environment chock on the longtable environment
# See https://github.com/vincentarelbundock/modelsummary/issues/50
tab_latex[1] <- sub("\\(Intercept\\)", "Intercept", tab_latex) 

sub("Adjusted R2", "\\\\midrule\\\\addlinespace[2.5pt]\nAdjusted R¬≤", tab_latex) %>%
  fit_gt_table_to_slide_long(scale = 0.7) %>% center_table()
```


## Honesty: Relative Regression Results

```{r RegressionTabHonPct, asis = TRUE}
df <- hrounds %>%
  mutate(
    pct_slack_available = (6000 - true_amount)/2000
  )
tab_latex <- modelsummary(
	list(`% Claimed Slack` = lm(pct_slack_claimed ~ pct_slack_available*experiment + round*experiment, data = df)),
	output = "gt",
	stars = c(`***` = 0.01, `**` = 0.05, `*` = 0.1),
	estimate  = "{estimate}{stars}", # Avoids note at the bottom f table
  gof_map = list(
		list(raw = "adj.r.squared", clean = "Adjusted R2", fmt = 3),
		list(
			raw = "nobs", clean = "Number of observations", 
			fmt = function(x) format(x, big.mark=",")
		)
	),
	coef_rename = c(
		"round" = "Round",
		"experimentBusiness Framing" = "Business Framing",
		"experimentBusiness Framing:round" = "Round \u00d7 Business Framing",
		"pct_slack_available" = "% Availabe Slack",
		"pct_slack_available:experimentBusiness Framing" = "% Availabe Slack \u00d7 Business Framing"
	)
) %>% as_latex()

# The below is needed since some tex environment chock on the longtable environment
# See https://github.com/vincentarelbundock/modelsummary/issues/50
tab_latex[1] <- sub("\\(Intercept\\)", "Intercept", tab_latex) 

sub("Adjusted R2", "\\\\midrule\\\\addlinespace[2.5pt]\nAdjusted R¬≤", tab_latex) %>%
  fit_gt_table_to_slide_long(scale = 0.7) %>% center_table()
```

## Honesty: Verbal Response

```{r ReasoningFigHon, fig.width=8, fig.height=3.5, fig.align="center", fig.showtext = TRUE}

vr <- hrounds %>%
	unnest_tokens(word, reported_amount_reason) %>%
	anti_join(stop_words, by = "word") %>% 
	group_by(experiment, word) %>%
	filter(n() > 50) %>%
	summarise(count = n())

ggplot(vr, aes(label = word, size = count, color = experiment)) +
	geom_text_wordcloud() +
	scale_color_manual("", values = color_scale, labels = color_scale_labs) +
	facet_wrap(~experiment) +
	theme_minimal()

```

## giftex: Descriptives

```{r DecDescStatsGift}
datasummary((`Wage offered` = wage) + (`Effort Level`= effort) ~ experiment*(N + (`Mean`=Mean) + (`S.D.` = SD) + (`Median`=Median)), data = grounds )

wt = t.test(grounds$wage ~ grounds$experiment)
et = t.test(grounds$effort ~ grounds$experiment)
```

Difference in wage offered (t-stat): `r star_stat(wt, neg = T)`

Difference in effort level (t-stat): `r star_stat(et, neg = T)`


## giftex: Association between Wage and Effort

```{r FigGift, fig.width=8, fig.height=3.5, fig.align="center", fig.showtext = TRUE}
names(color_scale) <- unique(levels(hrounds$experiment))
color_scale_labs <- c("Neutral", "Business Framing")

ggplot(grounds, aes(x = wage, y = effort, color = experiment)) +
  geom_jitter(size = 1) +
  labs(
    x = "Wage offered",
    y = "Effort level"
  ) +
  geom_smooth(method = "lm", model = y ~ x) +
  theme_classic(base_size = 16) +
  coord_cartesian(clip = 'off', xlim = c(0, 100), ylim = c(0, 1)) + 
  scale_color_manual("", values = color_scale, labels = color_scale_labs)
```

## giftex: Wage by Round

```{r GiftWageRoundFig, fig.width=8, fig.height=3.5, fig.align="center", fig.showtext = TRUE}
ggplot(grounds, aes(x = as.factor(round), y = wage, group = experiment, color = experiment)) +
	geom_beeswarm(size = 0.25, corral = "wrap") +
	stat_summary(
		aes(fill = experiment), color = NA, 
		geom = "ribbon", fun = "mean", alpha=0.1,
		fun.min = function(x) mean(x) - 1.96 / (length(x) - 1) * sd(x), 
		fun.max = function(x) mean(x) + 1.96 / (length(x) - 1) * sd(x),
		show.legend = FALSE
	) + 
	labs(x = "Round", y = "", color = "") +
	scale_color_manual("", values = color_scale, labels = color_scale_labs) +
	scale_fill_manual("", values = color_scale, labels = color_scale_labs) +
	theme_minimal() +
	theme(
		panel.grid.major.x  = element_blank(),
		panel.grid.minor = element_blank()
	)
```

## giftex: Effort Level by Round

```{r GiftEffortRoundFig, fig.width=8, fig.height=3.5, fig.align="center", fig.showtext = TRUE}
ggplot(grounds, aes(x = as.factor(round), y = effort, group = experiment, color = experiment)) +
	geom_beeswarm(size = 0.25, corral = "wrap") +
	stat_summary(
		aes(fill = experiment), color = NA, 
		geom = "ribbon", fun = "mean", alpha=0.1,
		fun.min = function(x) mean(x) - 1.96 / (length(x) - 1) * sd(x), 
		fun.max = function(x) mean(x) + 1.96 / (length(x) - 1) * sd(x),
		show.legend = FALSE
	) + 
	labs(x = "Round", y = "", color = "") +
	scale_color_manual("", values = color_scale, labels = color_scale_labs) +
	scale_fill_manual("", values = color_scale, labels = color_scale_labs) +
	theme_minimal() +
	theme(
		panel.grid.major.x  = element_blank(),
		panel.grid.minor = element_blank()
	)
```

## giftex: Verbal Response

```{r ReasoningFigGift, fig.width=8, fig.height=3.5, fig.align="center", fig.showtext = TRUE}

vr <- grounds %>%
	mutate(reasons = paste(wage_reason, effort_reason)) %>%
	unnest_tokens(word, reasons) %>%
	anti_join(stop_words, by = "word") %>% 
	group_by(experiment, word) %>%
	filter(n() > 50) %>%
	summarise(count = n())

ggplot(vr, aes(label = word, size = count, color = experiment)) +
	geom_text_wordcloud() +
	scale_color_manual("", values = color_scale, labels = color_scale_labs) +
	facet_wrap(~experiment) +
	theme_minimal()

```


## Next Steps 

- Decide on experiments to include in first draft
- Finalize experimental materials for those
- Run experiments with reasonable power 
- Write first draft
- Later: Compare (selected) findings with results for human participants 
