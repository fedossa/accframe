---
title: "accframe Results"
format: pdf  
execute: 
  warning: false
  message: false
  echo: false
---

## Table 1: Honesty Experiment: Descriptive Statistics

```{r, Setup}
LIMIT_GE_TO_PART_THAT_PASS_PRE_CC <- FALSE

#DVERSION_HONESTY <- "2024-05-24"
DVERSION_HONESTY <- "2024-06-17"
#DVERSION_HONESTY <- "2024-07-02"
#DVERSION_HONESTY <- "merged"

#DVERSION_TRUST <- "2024-05-25"
DVERSION_TRUST <- "2024-06-18"
#DVERSION_TRUST <- "2024-07-03"
#DVERSION_TRUST <- "merged"

#DVERSION_GIFTEX <- "2024-05-25"
DVERSION_GIFTEX <- "2024-06-18"
#DVERSION_GIFTEX <- "2024-07-02"
#DVERSION_GIFTEX <- "merged"


suppressPackageStartupMessages({
  library(tidyverse)
  library(fixest)
  library(modelsummary)
  library(ggbeeswarm)
  library(kableExtra)
})
hrounds <- read_csv(
  sprintf("../data/generated/honesty_%s_rounds.csv", DVERSION_HONESTY), 
  show_col_types = FALSE
) %>%
  mutate(
    experiment = factor(ifelse(
      experiment == "fhonesty",
      "Business Framing", "Neutral Framing"
    ), c("Neutral Framing", "Business Framing")),
    slack = reported_amount - true_amount,
    truthful = as.integer(reported_amount == true_amount),
    honesty = 1 - (reported_amount - true_amount)/(6000 - true_amount)
  )

hparticipants <- read_csv(
  sprintf("../data/generated/honesty_%s_participants.csv", DVERSION_HONESTY), 
  show_col_types = FALSE
) %>%
  mutate(
    experiment = factor(ifelse(
      experiment == "fhonesty",
      "Business Framing", "Neutral Framing"
    ), c("Neutral Framing", "Business Framing"))
  )

hpart <- hrounds %>%
  group_by(experiment, session_code, player_id) %>%
  summarise(
    sum_honesty = 1 - sum(reported_amount - true_amount)/sum(6000 - true_amount),
    truthful = as.integer(sum_honesty == 1),
    .groups = "drop"
  ) %>% left_join(hparticipants, by = c("experiment", "session_code", "player_id")) %>%
  mutate(
    passed_cc = as.integer(comprehension_check1 == 1 & comprehension_check2 == 1),
    classified_as_human = as.integer(human_check == 1)
  )

color_scale <- RColorBrewer::brewer.pal(3 ,"Set1")[c(2, 1)]
```

### Panel A: Round Level

```{r}
datasummary(
  (`% Truthful`= truthful) + 
    (`% Honest`=honesty) ~ experiment*(N + Mean + SD), 
  data = hrounds
)

chisq.test(hrounds$truthful, hrounds$experiment)
t.test(honesty ~ experiment, data = hrounds %>% filter(honesty < 1))
wilcox.test(honesty ~ experiment, data = hrounds %>% filter(honesty < 1))

```

{{< pagebreak >}}

### Panel B: Participant Level

```{r}
datasummary(
  (`% Always Truthful`= truthful) + 
    (`% Honest`= sum_honesty) +
    (`% Passed Comprehension Checks` = passed_cc) +
    (`% Classified as Human` = classified_as_human) ~ experiment*(N + Mean + SD), 
  data = hpart
)

hpart %>%
  group_by(experiment) %>%
  summarise(
    cc1_1 = mean(comprehension_check1 == 1),
    cc1_2 = mean(comprehension_check1 == 2),
    cc2_1 = mean(comprehension_check2 == 1),
    cc2_2 = mean(comprehension_check2 == 2)
  ) %>% kable() %>% kable_styling()

table(hpart$comprehension_check1, hpart$comprehension_check2)
chisq.test(hpart$truthful, hpart$experiment)
chisq.test(hpart$passed_cc, hpart$experiment)

t.test(sum_honesty ~ experiment, data = hpart %>% filter(sum_honesty < 1))
wilcox.test(sum_honesty ~ experiment, data = hpart %>% filter(sum_honesty < 1))
```


{{< pagebreak >}}

## Table 2: Does Business Framing affect the Amount of Budget Slack Claimed?

```{r}
mod_honesty_slack_claimed_fe <- feols(
  honesty ~ experiment | round, 
  cluster = c("round", "session_code^player_id"), 
  data = hrounds %>% filter(reported_amount != true_amount)
)
mod_honesty_slack_claimed <- feols(
  honesty ~ experiment*round, 
  cluster = c("round", "session_code^player_id"), 
  data = hrounds %>% filter(reported_amount != true_amount)
)

modelsummary(
  list(
    "Round Fixed Effects" = mod_honesty_slack_claimed_fe, 
    "Interacted by Round" = mod_honesty_slack_claimed
  ),
  statistic = c("conf.int", "({p.value})"),
  gof_map = list(
		list(raw = "adj.r.squared", clean = "Adjusted R2", fmt = 3),
		list(
			raw = "nobs", clean = "Number of observations", 
			fmt = function(x) format(x, big.mark=",")
		)
	),
	coef_map = c(
	  "(Intercept)" = "Intercept",
		"experimentBusiness Framing" = "Business Framing",
		"round" = "Round",
		"experimentBusiness Framing:round" = "Round \u00d7 Business Framing"
	)
)
```

{{< pagebreak >}}

## Figure 1: Average Slack Claimed by True Cost and Condition

```{r, fig.width=8, fig.height=8, fig.align="center"}
names(color_scale) <- unique(levels(hrounds$experiment))
color_scale_labs <- c("Neutral", "Business Framing")
df <- hrounds %>%
  group_by(true_amount, experiment) %>%
  summarise(mn_slack = mean(reported_amount - true_amount, na.rm = T))

ggplot(
  df, aes(x = true_amount, y = mn_slack, color = experiment)) +
  geom_jitter(size = 1) +
  labs(
    x = "True Cost",
    y = "",
    color = "Treatment"
  ) +
  theme_classic(base_size = 16) +
  geom_segment(x = 4000, y = 2000, xend = 6000, yend = 0, color = "#E41A1C", lty = 2) + 
  coord_cartesian(clip = 'off', xlim = c(4000, 6000), ylim = c(0, 2000)) + 
  scale_color_manual("", values = color_scale, labels = color_scale_labs) +
  theme(plot.title.position = "plot", legend.position = "bottom")
```

{{< pagebreak >}}

## Figure 2: Average % Honest by Round and Condition

```{r, fig.width=8, fig.height=8, fig.align="center"}
names(color_scale) <- unique(levels(hrounds$experiment))
color_scale_labs <- c("Neutral", "Business Framing")
df <- hrounds %>%
  group_by(round, experiment) %>%
  filter(!is.na(honesty)) %>%
  summarise(
    mn_honesty = mean(honesty),
    lb = mn_honesty - 1.96*sd(honesty)/sqrt(n()),
    ub = mn_honesty + 1.96*sd(honesty)/sqrt(n())
  )

ggplot(df, aes(x = round, y = mn_honesty, color = experiment)) +
  geom_point() +
  geom_errorbar(aes(ymin = lb, ymax = ub), width = 0) +
  labs(
    x = "Period",
    y = "%Honest",
    color = "Treatment"
  ) +
  scale_x_continuous(breaks = 1:10) +
  scale_y_continuous(limits = c(0,1), labels = scales::percent) +
  theme_classic(base_size = 16) + 
  scale_color_manual("", values = color_scale, labels = color_scale_labs) +
  theme(plot.title.position =  "plot", legend.position = "bottom")
```

{{< pagebreak >}}

## Table 3: Trust Experiment: Descriptive Statistics

```{r}
trounds <- read_csv(
  sprintf("../data/generated/trust_%s_rounds.csv", DVERSION_TRUST), 
  show_col_types = FALSE
) %>%
  mutate(
    experiment = factor(ifelse(
      experiment == "ftrust",
      "Business Framing", "Neutral Framing"
    ), c("Neutral Framing", "Business Framing")),
    pct_returned = sent_back_amount/(3*sent_amount)
  )

tparticipants <- read_csv(
  sprintf("../data/generated/trust_%s_participants.csv", DVERSION_TRUST), 
  show_col_types = FALSE
) %>%
  mutate(
    experiment = factor(ifelse(
      experiment == "ftrust",
      "Business Framing", "Neutral Framing"
    ), c("Neutral Framing", "Business Framing")),
    role = ifelse(role_in_group == 1, "Sender", "Receiver")
  )

dyads <- tparticipants %>%
  group_by(experiment, session_code, group_id) %>%
  summarise(sum_payoff = sum(payoff),.groups = "drop")
```

### Panel A: Round Level

```{r}
datasummary(
    (`Amount Sent`= sent_amount) +
    (`Amount Returned`= sent_back_amount) +
    (`% Returned` = pct_returned) ~ experiment*(N + Mean + SD), 
  data = trounds
)

t.test(sent_amount ~ experiment, data = trounds)
wilcox.test(sent_amount ~ experiment, data = trounds)

t.test(sent_back_amount ~ experiment, data = trounds)
wilcox.test(sent_back_amount ~ experiment, data = trounds)

t.test(pct_returned ~ experiment, data = trounds)
wilcox.test(pct_returned ~ experiment, data = trounds)

```

{{< pagebreak >}}

### Panel B: Participant Level

```{r}
datasummary(
  (`Payoff`= payoff) +
    (`% Passed Comprehension Check` = as.integer(comprehension_check == 3)) +
    (`% Passed Manipulation Check` = as.integer(manipulation_check == role_in_group)) +
    (`% Classified as Human` = as.integer(human_check == 1)) ~ experiment*(N + Mean + SD), 
     data = tparticipants
)

tparticipants %>%
  group_by(experiment) %>%
  summarise(
    cc_1 = mean(comprehension_check == 1),
    cc_2 = mean(comprehension_check == 2),
    cc_3 = mean(comprehension_check == 3),
    mc_t = mean(manipulation_check == role_in_group),
    mc_f = mean(manipulation_check != role_in_group)
  ) %>% kable() %>% kable_styling()

if (sd(tparticipants$comprehension_check, na.rm = T) > 0) {
  chisq.test(tparticipants$comprehension_check == 3, tparticipants$experiment)
}
if (sd(tparticipants$manipulation_check == tparticipants$role_in_group, na.rm = T) > 0) {
  chisq.test(
    tparticipants$manipulation_check == tparticipants$role_in_group, 
    tparticipants$experiment
  )
}

t.test(payoff ~ experiment, data = tparticipants)
wilcox.test(payoff ~ experiment, data = tparticipants)
```

{{< pagebreak >}}

### Panel C: Dyad Level

```{r}
datasummary(
    (`Dyad Payoff`= sum_payoff) ~ experiment*(N + Mean + SD), 
  data = dyads
)

t.test(sum_payoff ~ experiment, data = dyads)
wilcox.test(sum_payoff ~ experiment, data = dyads)
```

{{< pagebreak >}}

## Table 4: Does Business Framing affect the Amount Sent by the Sender?

```{r}
mod_trust_sent_fe <- feols(
  sent_amount ~ experiment | round, 
  cluster = c("round", "session_code^group_id"), data = trounds
)
mod_trust_sent <- feols(
  sent_amount ~ experiment*round, 
  cluster = c("round", "session_code^group_id"), data = trounds
)

modelsummary(
  list(
    "Round Fixed Effects" = mod_trust_sent_fe, 
    "Interacted by Round" = mod_trust_sent
  ),
  statistic = c("conf.int", "({p.value})"),
  gof_map = list(
		list(raw = "adj.r.squared", clean = "Adjusted R2", fmt = 3),
		list(
			raw = "nobs", clean = "Number of observations", 
			fmt = function(x) format(x, big.mark=",")
		)
	),
	coef_map = c(
	  "(Intercept)" = "Intercept",
		"experimentBusiness Framing" = "Business Framing",
		"round" = "Round",
		"experimentBusiness Framing:round" = "Round \u00d7 Business Framing"
	)
)
```

{{< pagebreak >}}

## Table 5: Does Business Framing affect the Percentage Returned by the Receiver?
```{r}
mod_trust_pct_returned_fe <- feols(
  pct_returned ~ experiment | round, 
  cluster = c("round", "session_code^group_id"), data = trounds
)
mod_trust_pct_returned <- feols(
  pct_returned ~ round*experiment, 
  cluster = c("round", "session_code^group_id"), data = trounds
)

modelsummary(
  list(
    "Round Fixed Effects" = mod_trust_pct_returned_fe, 
    "Interacted by Round" = mod_trust_pct_returned
  ),
  statistic = c("conf.int", "({p.value})"),
  gof_map = list(
		list(raw = "adj.r.squared", clean = "Adjusted R2", fmt = 3),
		list(
			raw = "nobs", clean = "Number of observations", 
			fmt = function(x) format(x, big.mark=",")
		)
	),
	coef_map = c(
	  "(Intercept)" = "Intercept",
		"experimentBusiness Framing" = "Business Framing",
		"round" = "Round",
		"round:experimentBusiness Framing" = "Round \u00d7 Business Framing"
	)
)
```

{{< pagebreak >}}

## Table 6: Does Business Framing affect the Participants’ Payoffs?

```{r}
mod_part <- feols(
  payoff ~ experiment*role, 
  cluster = c( "session_code^group_id"),
  data = tparticipants
)

modelsummary(
  mod_part,
  statistic = c("std.error", "statistic", "({p.value})"),
  gof_map = list(
		list(raw = "adj.r.squared", clean = "Adjusted R2", fmt = 3),
		list(
			raw = "nobs", clean = "Number of observations", 
			fmt = function(x) format(x, big.mark=",")
		)
	),
	coef_map = c(
	  "(Intercept)" = "Intercept",
		"roleSender" = "Sender",
		"experimentBusiness Framing" = "Business Framing",
		"experimentBusiness Framing:roleSender" = "Sender \u00d7 Business Framing"
	)
)

t.test(payoff ~ experiment, data = tparticipants)
wilcox.test(payoff ~ experiment, data = tparticipants)

t.test(payoff ~ experiment, data = tparticipants %>% filter(role == "Sender"))
wilcox.test(payoff ~ experiment, data = tparticipants %>% filter(role == "Sender"))

t.test(payoff ~ experiment, data = tparticipants %>% filter(role == "Receiver"))
wilcox.test(payoff ~ experiment, data = tparticipants %>% filter(role == "Receiver"))

# Dyad Level

t.test(sum_payoff ~ experiment, data = dyads)
wilcox.test(sum_payoff ~ experiment, data = dyads)

```

{{< pagebreak >}}

## Figure 2: Amount Sent by Round and Condition

```{r, fig.width=8, fig.height=8, fig.align="center"}
ggplot(trounds, aes(x = as.factor(round), y = sent_amount, group = experiment, color = experiment)) +
	geom_jitter(size = 0.25) +
	stat_summary(
		aes(fill = experiment), color = NA, 
		geom = "ribbon", fun = "mean", alpha=0.5,
		fun.min = function(x) mean(x) - 1.96 * sqrt(sd(x)/length(x)), 
		fun.max = function(x) mean(x) + 1.96 * sqrt(sd(x)/length(x)),
		show.legend = FALSE
	) + 
	labs(x = "Round", y = "", color = "") +
  scale_y_continuous(limits = c(0, 100)) + 
	scale_color_manual("", values = color_scale, labels = color_scale_labs) +
	scale_fill_manual("", values = color_scale, labels = color_scale_labs) +
	theme_classic() +
	theme(
	  legend.position = "bottom",
		panel.grid.major.x  = element_blank(),
		panel.grid.minor = element_blank()
	)
```

## Figure 2B: Amount Sent by Round and Condition

```{r, fig.width=8, fig.height=8, fig.align="center"}
df <- trounds %>%
  group_by(round, experiment) %>%
  summarise(
    mn_sent_amount = mean(sent_amount),
    lb = mn_sent_amount - 1.96*sd(sent_amount)/sqrt(n()),
    ub = mn_sent_amount + 1.96*sd(sent_amount)/sqrt(n())
  )

ggplot(df, aes(x = round, y = mn_sent_amount, color = experiment)) +
  geom_point(position = position_dodge(width = 0.5)) +
  geom_errorbar(
    aes(ymin = lb, ymax = ub), width = 0,
    position = position_dodge(width = 0.5)
  ) +
  labs(
    x = "Period",
    y = "Investment",
    color = "Treatment"
  ) +
  scale_x_continuous(breaks = 1:10) +
#  scale_y_continuous(limits = c(0,100)) +
  theme_classic(base_size = 16) + 
  scale_color_manual("", values = color_scale, labels = color_scale_labs) +
  theme(plot.title.position =  "plot", legend.position = "bottom")
```

## Table 7: Gift Exchange Experiment: Descriptive Statistics

```{r}
cost <- function(e) {
  case_when(
    e == 0.1 ~ 0,
    e == 0.2 ~ 1,
    e == 0.3 ~ 2,
    e == 0.4 ~ 4,
    e == 0.5 ~ 6,
    e == 0.6 ~ 8,
    e == 0.7 ~ 10,
    e == 0.8 ~ 12,
    e == 0.9 ~ 15,
    e == 1.0 ~ 28,
    TRUE ~ NA
  )
}

grounds <- read_csv(
  sprintf("../data/generated/giftex_%s_rounds.csv", DVERSION_GIFTEX), 
  show_col_types = FALSE
) %>%
  mutate(
    experiment = factor(ifelse(
      experiment == "fgiftex",
      "Business Framing", "Neutral Framing"
    ), 
      c("Neutral Framing", "Business Framing")),
    payoff_employer = (100 - wage)*effort,
    payoff_employee = wage - cost(effort)
  )

gparticipants <- read_csv(
  sprintf("../data/generated/giftex_%s_participants.csv", DVERSION_GIFTEX), 
  show_col_types = FALSE
) %>%
  mutate(
    experiment = factor(ifelse(
      experiment == "fgiftex",
      "Business Framing", "Neutral Framing"
    ), c("Neutral Framing", "Business Framing")),
  )

if (LIMIT_GE_TO_PART_THAT_PASS_PRE_CC) {
  gparticipants <- gparticipants %>% 
    filter(comprehension_check_pre1 == 27 & comprehension_check_pre2 == 8)
  
  valid_dyads <- gparticipants %>% select(session_code, group_id) %>%
    group_by(session_code, group_id) %>%
    filter(n() == 2) %>%
    ungroup() %>%
    distinct()
  
  grounds <- inner_join(grounds, valid_dyads, by = c("session_code", "group_id")) 
}
  
  
```

### Panel A: Round Level

```{r}
datasummary(
  (`Wage Paid`= wage) +
    (`Effort Returned`= effort) +
    (`Payoff Employer` = payoff_employer) +
    (`Payoff Employee` = payoff_employee) ~ experiment*(N + Mean + SD), 
  data = grounds
)

t.test(wage ~ experiment, data = grounds)
wilcox.test(wage ~ experiment, data = grounds)

t.test(effort ~ experiment, data = grounds)
wilcox.test(effort ~ experiment, data = grounds)

t.test(payoff_employer ~ experiment, data = grounds)
wilcox.test(payoff_employer ~ experiment, data = grounds)

t.test(payoff_employee ~ experiment, data = grounds)
wilcox.test(payoff_employee ~ experiment, data = grounds)

```

{{< pagebreak >}}

### Panel B: Participant Level

```{r}
grounds_role <- grounds %>%
  group_by(experiment, session_code, group_id) %>%
  mutate(
    payoff_1 = payoff_employer,
    payoff_2 = payoff_employee
  ) %>%
  pivot_longer(
    c(payoff_1, payoff_2), values_to = "payoff", names_to = "player_id",
    names_prefix = "payoff_", names_transform = as.integer
  ) %>%
  mutate(role = ifelse(player_id == 1, "Employer", "Employee")) 

gpart <- grounds_role %>%
  group_by(
    experiment, session_code, group_id, player_id
  ) %>%
  summarise(
    payoff = sum(payoff),
    .groups = "drop"
  ) %>%
  left_join(
    gparticipants,
    by = join_by(experiment, session_code, group_id, player_id)
  ) %>%
  mutate(
    role = ifelse(player_id == 1, "Employer", "Employee"),
    passed_cc_pre = as.integer(
      comprehension_check_pre1 == 27 & comprehension_check_pre2 == 8
    ),
    passed_cc_post = as.integer(
      comprehension_check_post1 == 3 & comprehension_check_post2 == 1
    )
  )

datasummary(
  (`Payoff`= payoff) +
    (`% Passed Comprehension Check Pre` = passed_cc_pre) +
    (`% Passed Comprehension Check Post` = passed_cc_post) +
    (`% Classified as Human` = as.integer(human_check == 1)) ~ experiment*(N + Mean + SD), 
     data = gpart
)

gpart %>%
  group_by(experiment) %>%
  summarise(
    cpre_1_t = mean(comprehension_check_pre1 == 27),
    cpre_2_t = mean(comprehension_check_pre2 == 8),
    cpost1_1 = mean(comprehension_check_post1 == 1),
    cpost1_2 = mean(comprehension_check_post1 == 2),
    cpost1_3 = mean(comprehension_check_post1 == 3),
    cpost2_1 = mean(comprehension_check_post2 == 1),
    cpost2_2 = mean(comprehension_check_post2 == 2),
    cpost2_3 = mean(comprehension_check_post2 == 3)
  ) %>% kable() %>% kable_styling()

table(gpart$comprehension_check_pre1 == 27, gpart$comprehension_check_pre2 == 8)
table(gpart$comprehension_check_post1 == 3, gpart$comprehension_check_post2 == 1)
table(gpart$comprehension_check_post1)

# chisq.test(gpart$passed_cc_pre, gpart$experiment)
chisq.test(gpart$passed_cc_post, gpart$experiment)

t.test(payoff ~ experiment, data = gpart)
wilcox.test(payoff ~ experiment, data = gpart)
```

{{< pagebreak >}}

### Panel C: Dyad Level

```{r}
dyads <- gpart %>%
  group_by(experiment, session_code, group_id) %>%
  summarise(sum_payoff = sum(payoff),.groups = "drop")

datasummary(
    (`Dyad Payoff`= sum_payoff) ~ experiment*(N + Mean + SD), 
  data = dyads
)

t.test(sum_payoff ~ experiment, data = dyads)
wilcox.test(sum_payoff ~ experiment, data = dyads)
```

{{< pagebreak >}}

## Table 8: Does Business Framing affect the Wage Paid?

```{r}
mod_wage_fe <- feols(
  wage ~ experiment | round, 
  cluster = c("round", "session_code^group_id"), data = grounds
)
mod_wage <- feols(
  wage ~ experiment*round, 
  cluster = c("round", "session_code^group_id"), data = grounds
)

modelsummary(
  list(
    "Round Fixed Effects" = mod_wage_fe, 
    "Interacted by Round" = mod_wage
  ),
  statistic = c("conf.int", "({p.value})"),
  gof_map = list(
		list(raw = "adj.r.squared", clean = "Adjusted R2", fmt = 3),
		list(
			raw = "nobs", clean = "Number of observations", 
			fmt = function(x) format(x, big.mark=",")
		)
	),
	coef_map = c(
	  "(Intercept)" = "Intercept",
		"experimentBusiness Framing" = "Business Framing",
		"round" = "Round",
		"experimentBusiness Framing:round" = "Round \u00d7 Business Framing"
	)
)
```

{{< pagebreak >}}

## Table 9: Does Business Framing affect the Effort Returned?

```{r}
mod_effort_fe <- feols(
  effort ~ experiment | round, 
  cluster = c("round", "session_code^group_id"), data = grounds
)
mod_effort <- feols(
  effort ~ experiment*round, 
  cluster = c("round", "session_code^group_id"), data = grounds
)


modelsummary(
  list(
    "Round Fixed Effects" = mod_effort_fe, 
    "Interacted by Round" = mod_effort
  ),
  statistic = c("conf.int", "({p.value})"),
  gof_map = list(
		list(raw = "adj.r.squared", clean = "Adjusted R2", fmt = 3),
		list(
			raw = "nobs", clean = "Number of observations", 
			fmt = function(x) format(x, big.mark=",")
		)
	),
	coef_map = c(
	  "(Intercept)" = "Intercept",
		"experimentBusiness Framing" = "Business Framing",
		"round" = "Round",
		"experimentBusiness Framing:round" = "Round \u00d7 Business Framing"
	)
)
```

{{< pagebreak >}}

## Table 10: Does Business Framing affect the Wage Sensitivity of Effort?

```{r}

mod_effort_sensitivity_fe <- feols(
  effort ~ wage*experiment | round, 
  cluster = c("round", "session_code^group_id"), data = grounds
)

modelsummary(
  mod_effort_sensitivity_fe,
  statistic = c("conf.int", "({p.value})"),
  gof_map = list(
		list(raw = "adj.r.squared", clean = "Adjusted R2", fmt = 3),
		list(
			raw = "nobs", clean = "Number of observations", 
			fmt = function(x) format(x, big.mark=",")
		)
	),
	coef_map = c(
	  "(Intercept)" = "Intercept",
	  "wage" = "Wage",
		"experimentBusiness Framing" = "Business Framing",
		"wage:experimentBusiness Framing" = "Wage \u00d7 Business Framing"
	)
)
```

{{< pagebreak >}}

## Table 11: Does Business Framing Affect the Participant’s Payoffs?

```{r}
mod_payoff_part <- feols(
  payoff ~ experiment*role, data = gpart, 
  cluster = c( "session_code^group_id")
)

get_estimates(mod_payoff_part)

modelsummary(
  mod_payoff_part,
  statistic = c("std.error", "statistic", "({p.value})"),
  gof_map = list(
		list(raw = "adj.r.squared", clean = "Adjusted R2", fmt = 3),
		list(
			raw = "nobs", clean = "Number of observations", 
			fmt = function(x) format(x, big.mark=",")
		)
	),
	coef_map = c(
	  "(Intercept)" = "Intercept",
	  "roleEmployer" = "Employer",
		"experimentBusiness Framing" = "Business Framing",
		"experimentBusiness Framing:roleEmployer" = "Employer \u00d7 Business Framing"
	)
)

```

{{< pagebreak >}}

## Figure 4: Wage Sensitivity of Effort by Condition

```{r, fig.width=8, fig.height=8, fig.align="center"}
ggplot(
  grounds, 
  aes(x = wage, y = effort, color = experiment, group = experiment)
) + geom_jitter(size = 0.25) + 
  geom_smooth(method = "lm") + 
	scale_color_manual("", values = color_scale, labels = color_scale_labs) +
  labs(color = "", x = "Wage Paid", y = "Effort Level") +
  theme_classic() + 
	theme(
	  legend.position = "bottom",
		panel.grid.minor = element_blank()
	)

```

